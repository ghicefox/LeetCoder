public class Solution {
    private char[,] grid;
    private int totalRows;
    private int totalCols;

    public int NumIslands(char[,] grid)
    {
        int islandCount = 0;
        this.grid = grid;
        this.totalRows = this.grid.GetLength(0);
        this.totalCols = this.grid.GetLength(1);
        for (int r = 0; r < this.totalRows; r++)
            for (int c = 0; c < this.totalCols; c++)
            {
                if (this.grid[r, c] == '1')     //Found land on an island.
                {
                    islandCount++;              //Increment island count.
                    TravelFullIsland(r, c);     //Travel the island.
                }
            }

        return islandCount;
    }

    private void TravelFullIsland(int r, int c)
    {
        if (r < 0 || c < 0 || r == this.totalRows || c == this.totalCols || this.grid[r, c] == '0' || this.grid[r, c] == 'T') return;
        else
        {
            this.grid[r, c] = 'T';        //Marking travelled.
            TravelFullIsland(r + 1, c);   //Travelling neighboring land on the island.
            TravelFullIsland(r, c + 1);   //Travelling neighboring land on the island.
            TravelFullIsland(r - 1, c);   //Travelling neighboring land on the island.
            TravelFullIsland(r, c - 1);   //Travelling neighboring land on the island.
        }
    }
}